---
import MainLayout from '../layouts/MainLayout.astro';
import SectionWrapper from '../components/layout/SectionWrapper.astro';

const title = 'Bewerbung – Operation Zündkapsel';
const description = 'Bewirb dich für eines der 10 Gründer‑Mandate: 12‑monatiges strategisches Bündnis für deinen Sieg gegen Konzerne, Versicherer oder Behörden.';
---
<MainLayout title={title} description={description}>
  <SectionWrapper variant="accent" prose={false}>
    <div class="content-narrow space-y-8">
      <div class="space-y-4">
        <h1 class="text-3xl md:text-4xl font-bold text-text-primary">Bewerbung – Operation Zündkapsel</h1>
        <p class="text-text-secondary">
          Bewirb dich für das 12-monatige Mentoring-Programm. Beschreibe klar deinen Fall, dein Ziel und warum du bereit bist, die Verantwortung zu übernehmen.
        </p>
      </div>

      <form
        action="https://formspree.io/f/xandgpzd"
        method="POST"
        class="grid gap-6"
        id="bewerbungForm"
        novalidate
      >
      <!-- Redirect nach Erfolg -->
      <input type="hidden" name="_next" value="/bewerbung/danke" />
      <!-- Honeypot -->
      <div class="hidden">
        <label>Website (nicht ausfüllen)
          <input type="text" name="website" autocomplete="off" />
        </label>
      </div>
      <!-- Time trap -->
      <input type="hidden" name="form_start_ms" id="form_start_ms" />

      <div class="grid gap-4 md:grid-cols-2">
        <div class="form-field">
          <label for="vorname" class="form-label">Vorname<span class="text-error">*</span></label>
          <input id="vorname" name="vorname" required autocomplete="given-name" class="form-input" />
        </div>
        <div class="form-field">
          <label for="nachname" class="form-label">Nachname<span class="text-error">*</span></label>
          <input id="nachname" name="nachname" required autocomplete="family-name" class="form-input" />
        </div>
      </div>

      <div class="grid gap-4 md:grid-cols-2">
        <div class="form-field">
          <label for="email" class="form-label">E‑Mail<span class="text-error">*</span></label>
          <input id="email" type="email" name="email" required autocomplete="email" class="form-input" />
        </div>
        <div class="form-field">
          <label for="telegram" class="form-label">Telegram (optional)</label>
          <input id="telegram" name="telegram" placeholder="@deinhandle" class="form-input" />
        </div>
      </div>

      <div class="form-field">
        <label for="gegner" class="form-label">Gegner (Firma/Versicherung/Behörde)<span class="text-error">*</span></label>
        <input id="gegner" name="gegner" required class="form-input" />
      </div>

      <div class="form-field">
        <label for="fall" class="form-label">Fall‑Kurzfassung (5–10 Sätze)<span class="text-error">*</span></label>
        <textarea id="fall" name="fall" required rows="6" class="form-input"></textarea>
      </div>

      <div class="form-field">
        <label for="ziel12" class="form-label">Ziel in 12 Monaten<span class="text-error">*</span></label>
        <textarea id="ziel12" name="ziel12" required rows="4" class="form-input"></textarea>
      </div>

      <div class="form-field">
        <label for="bisher" class="form-label">Was hast du bereits versucht? (optional)</label>
        <textarea id="bisher" name="bisher" rows="3" class="form-input"></textarea>
      </div>

      <div class="form-field">
        <label for="doku_link" class="form-label">Link zu Unterlagen (optional)</label>
        <input id="doku_link" type="url" name="doku_link" placeholder="https://…" class="form-input" />
      </div>

      <div class="space-y-3">
        <label class="inline-flex items-start gap-3" for="commit_testimonial">
          <input id="commit_testimonial" type="checkbox" name="commit_testimonial" required class="mt-1 h-5 w-5 rounded border border-border-default bg-background-primary text-accent focus:ring-2 focus:ring-accent focus:ring-offset-2 focus:ring-offset-background-primary transition-colors" />
          <span class="text-text-secondary">Ich bestätige mein Commitment für ein schonungsloses Video‑Testimonial nach meinem Sieg.<span class="text-error">*</span></span>
        </label>
        <label class="inline-flex items-start gap-3" for="privacy">
          <input id="privacy" type="checkbox" name="privacy" required class="mt-1 h-5 w-5 rounded border border-border-default bg-background-primary text-accent focus:ring-2 focus:ring-accent focus:ring-offset-2 focus:ring-offset-background-primary transition-colors" />
          <span class="text-text-secondary">Ich habe die <a href="/datenschutz" class="text-text-primary underline decoration-accent decoration-2 underline-offset-4 hover:decoration-accent-hover">Datenschutz</a> gelesen.<span class="text-error">*</span></span>
        </label>
      </div>

      <!-- Optionale Mini-Mathe-Aufgabe (Client-seitig) -->
      <div id="captchaBlock" class="form-field">
        <label for="captchaAnswer" class="form-label">
          Bitte löse zur Verifikation: <span id="captchaQuestion" class="text-text-primary"></span><span class="text-error">*</span>
        </label>
        <input type="number" inputmode="numeric" name="captcha_answer" id="captchaAnswer" class="form-input max-w-xs" required />
        <input type="hidden" id="captchaExpected" />
        <p id="captchaError" class="text-sm text-error hidden">Antwort ist falsch. Bitte nochmal prüfen.</p>
      </div>

      <button type="submit" class="btn-primary mt-2">
        Jetzt bewerben
      </button>
      <p class="text-xs text-text-secondary/80">* Pflichtfelder | Nach dem Absenden erhältst du innerhalb von 7 Tagen eine Rückmeldung.</p>
      </form>
    </div>

    <script>
      // time trap
      const startEl = document.getElementById('form_start_ms');
      if (startEl instanceof HTMLInputElement) {
        startEl.value = String(Date.now());
      }

      // simple math captcha
      const a = Math.floor(Math.random() * 7) + 2; // 2..8
      const b = Math.floor(Math.random() * 7) + 2; // 2..8
      const questionEl = document.getElementById('captchaQuestion');
      const expectedEl = document.getElementById('captchaExpected');
      if (questionEl) {
        questionEl.textContent = `${a} + ${b} = ?`;
      }
      if (expectedEl instanceof HTMLInputElement) {
        expectedEl.value = String(a + b);
      }

      // client-side gate on submit
      const form = document.getElementById('bewerbungForm');
      form?.addEventListener('submit', (e) => {
        const websiteEl = form.querySelector('input[name="website"]');
        const website = (websiteEl instanceof HTMLInputElement) ? websiteEl.value : '';
        if (website) {
          e.preventDefault(); // honeypot triggered
          return;
        }
        const startVal = (startEl instanceof HTMLInputElement) ? startEl.value : '0';
        const start = parseInt(startVal || '0', 10);
        const delta = Date.now() - start;
        if (delta < 5000) { // <5s → verdächtig
          e.preventDefault();
          alert('Bitte nimm dir einen Moment Zeit und versuche es erneut.');
          return;
        }
        const ansEl = document.getElementById('captchaAnswer');
        const expectedValEl = document.getElementById('captchaExpected');
        const ans = (ansEl instanceof HTMLInputElement) ? parseInt(ansEl.value || '0', 10) : 0;
        const expected = (expectedValEl instanceof HTMLInputElement) ? parseInt(expectedValEl.value || '0', 10) : 0;
        if (ans !== expected) {
          e.preventDefault();
          const err = document.getElementById('captchaError');
          err?.classList.remove('hidden');
        }
      });
    </script>
  </SectionWrapper>
</MainLayout>
